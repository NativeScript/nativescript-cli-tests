Usage:
    $ tns deploy <Platform> [--device <Device ID>] [--release]

Platform-specific usages:
    $ tns deploy android [--device <Device ID>] [--keyStorePath <File Path> --keyStorePassword <Password> --keyStoreAlias <Name> --keyStoreAliasPassword <Password>] [--release]
    $ tns deploy ios [--device <Device ID>] [--release]

Builds and deploys the project to a connected physical or virtual device.

<Device ID> is the index or name of the target device as listed by $ tns device

Before building for iOS device, verify that you have configured a valid pair of certificate and provisioning profile on your OS X system.

Options for ios:
    --device - Deploys the project on the specified connected physical or virtual device.
    --release - If set, produces a release build. Otherwise, produces a debug build.
Options for android:
    --device - Deploys the project on the specified connected physical or virtual device.
    --release - If set, produces a release build. Otherwise, produces a debug build.
        When the --keyStore* options are specified, produces a signed release build.
    --keyStorePath - Specifies the file path to the keystore file (P12) which you want to use to code sign your APK.
        You can use the --keyStore* options along with --release to produce a signed release build.
        You need to specify all --keyStore* options.
    --keyStorePassword - Provides the password for the keystore file specified with --keyStorePath.
        You can use the --keyStore* options along with --release to produce a signed release build.
        You need to specify all --keyStore* options.
    --keyStoreAlias - Provides the alias for the keystore file specified with --keyStorePath.
        You can use the --keyStore* options along with --release to produce a signed release build.
        You need to specify all --keyStore* options.
    --keyStoreAliasPassword - Provides the password for the alias specified with --keStoreAliasPassword.
        You can use the --keyStore* options along with --release to produce a signed release build.
        You need to specify all --keyStore* options.